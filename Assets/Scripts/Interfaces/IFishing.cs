using UnityEngine;
using System;
using System.Collections;

// WARNING: подумать конкретно о необходимости данного уровня детализации в плане интефейса
// Возможно стоит оставить на верхнем уровне конкретные классы рыбалки без интерфейсов, поскольку сами по себе, это уже достаточно 
// абстрактные (в плане логики) классы, находящиеся на самой вершине иерархии.

// -------------------------------------------------------------------------------------------------------------------

// По сути представляет собой рыбалку. С ее набором правил. То есть каждые отдельные объект Fishing может
// реализовывать свою логику, набор правил, условия успеха, организацию уровней, порядок генерации и т.п. 
// Заменяя объект Fishing другим можем получить иные условия.
// Иными словами Fishing - это менеджер игры.

// По скольку Fishing это в первую очередь логика, то она должна быть отделена от визуализации,
// поэтому за отображение информации должен отвечать иной объект Visualizer, который также в зависимости от 
// потребностей может заменяться другим.

public interface IFishing {

	event Action<object> OnStateUpdate;	// уведомление о произошедших изменениях, в частности может быть использовано Visualizer'ом, чтобы обновить представление информации

}
